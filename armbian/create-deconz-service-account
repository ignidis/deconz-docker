#!/bin/bash
#
# These are the service accounts we will use to start the docker containers
# The service accounts are primarily served to store the persistent configuration and avoid starting containers as root users
# In the container we should also define the service users with the save UID we are using on the host
# best practice is to build the container using the UID and name of the host service account (--user and --uid parameters) 
#

SERVICE_USER="deconz";
SERVICE_USER_UID="9001";
SERVICE_GROUP="deconz";
SERVICE_GROUP_UID="9001";
ADD_GROUPS="sudo,dialout"

#
# Create service group and service account
#
userdel $SERVICE_USER >/dev/null 2>&1;
groupdel $SERVICE_GROUP >/dev/null 2>&1;

groupadd -g $SERVICE_GROUP_UID $SERVICE_GROUP;
useradd -u $SERVICE_USER_UID -g $SERVICE_GROUP --groups $ADD_GROUPS --shell /bin/bash --create-home $SERVICE_USER;
chown -R $SERVICE_USER:$SERVICE_GROUP /home/$SERVICE_USER/;

#
# Allow service account to sudo without pasword
#
if [ ! -f /etc/sudoers.d/090_deconz-nopasswd ]; then
    echo 'deconz ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/090_deconz-nopasswd;
fi

#
# Create persistent config directory, will be exposed as volume to the docker container
#
if [ ! -d "/var/lib/deconz" ]; then
    mkdir /var/lib/deconz/;
fi
#
# Ensure access from host to the container directories
# Giving access to the local service user and the root, just in case the UID of the container service user differs from the host UID 
#
chown -R deconz:root /var/lib/deconz/;